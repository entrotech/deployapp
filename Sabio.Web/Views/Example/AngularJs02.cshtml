
@{
    ViewBag.Title = "ConceptualOverview02";
    Layout = "~/Views/Shared/_EmptyLayout.cshtml";
}

<h2>Adding UI logic: Controllers</h2>
<ul>
    <li>Use a named controller constructor function.</li>
    <li>Use vm as a capture variable inside the controller function body.</li>
    <li>Use named "private" functions below the fold.</li>
</ul>

<div ng-app="invoice1" ng-controller="InvoiceController as invoice">
    <b>Invoice:</b>
    <div>
        Quantity: <input type="number" min="0" ng-model="invoice.qty" required>
    </div>
    <div>
        Costs: <input type="number" min="0" ng-model="invoice.cost" required>
        <select ng-model="invoice.inCurr">
            <option ng-repeat="c in invoice.currencies">{{c}}</option>
        </select>
    </div>
    <div>
        <b>Total:</b>
        <span ng-repeat="c in invoice.currencies">
            {{invoice.total(c) | currency:c}}
        </span><br>
        <button class="btn" ng-click="invoice.pay()">Pay</button>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/angular.js"></script>

    <script>

        angular.module('invoice1', [])
            .controller('InvoiceController', InvoiceController);

        function InvoiceController() {
            vm = this;

            // ViewModel
            vm.qty = 1;
            vm.cost = 2;
            vm.inCurr = 'EUR';
            vm.currencies = ['USD', 'EUR', 'CNY'];
            vm.usdToForeignRates = {
                USD: 1,
                EUR: 0.74,
                CNY: 6.09
            };

            vm.total = _total;
            vm.convertCurrency = _convertCurrency;
            vm.pay = _pay;

            // Fold

            function _total(outCurr) {
                return this.convertCurrency(this.qty * this.cost, this.inCurr, outCurr);
            }

            function _convertCurrency(amount, inCurr, outCurr) {
                return amount * this.usdToForeignRates[outCurr] / this.usdToForeignRates[inCurr];
            }

            function _pay() {
                window.alert('Thanks!');
            }
        }

    </script>

}
